<div class="container-fluid">
    <div class="col-12 mb-4">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home" aria-hidden="true">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-cogs" aria-hidden="true">&nbsp;</i>Configuración </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-ui-checks" aria-hidden="true">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <span class="h4">Conceptos</span>
            <a href="@Url.Action("Nuevo", "Conceptos")" class="btn btn-primary pull-right modal-link">
                <i class="fa fa-plus-circle" aria-hidden="true"></i> Nuevo concepto
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="dataTableConceptos" width="100%">
                    <thead class="thead-dark">
                        <tr>
                            <th>Tip.Concepto</th>
                            <th>Cod.Concepto</th>
                            <th>Descripción</th>
                            <th>Abrv</th>
                            <th>Estado</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Tip.Concepto</th>
                            <th>Cod.Concepto</th>
                            <th>Descripción</th>
                            <th>Abrv</th>
                            <th>Estado</th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <span class="h4">Planillas</span>
            <a href="@Url.Action("Nuevo", "PlantillaPlanilla")" class="btn btn-primary pull-right modal-link">
                <i class="fa fa-plus-circle" aria-hidden="true"></i> Nueva Planilla
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="dataTablePlantillaPlanilla" width="100%">
                    <thead class="thead-dark">
                        <tr>
                            <th>Categoría</th>
                            <th>Descripción</th>
                            <th>Estado</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Categoría</th>
                            <th>Descripción</th>
                            <th>Estado</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var modalActivo = null;

        $(document).ready(function () {
            generarDatatableConceptos();
            generarDatatablePlantillasPlanilla();

            $(".modal").on('hide.bs.modal', function () {
                if (modalActivo === "modal-plantilla-planilla") {
                    generarDatatablePlantillasPlanilla();
                } else if (modalActivo === "modal-concepto") {
                    generarDatatableConceptos();
                }
            });
        });

        function generarDatatableConceptos() {
            $('#dataTableConceptos').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaConceptos", "Conceptos")',
                    'type': 'get'
                },
                columns: [
                    { data: 'tipoConceptoDesc' },
                    { data: 'conceptoCod' },
                    { data: 'conceptoDesc' },
                    { data: 'conceptoAbrv' },
                    { data: 'conceptoID' },
                    { data: 'conceptoID' }
                ],
                columnDefs: [
                    {
                        targets: -2,
                        orderable: false,
                        render: function (data, type, row) {
                            let btnClass = (row.estaHabilitado === true) ? 'success' : 'secondary';
                            let iClass = (row.estaHabilitado === true) ? 'check-circle-o' : 'minus-circle';
                            let estado = (row.estaHabilitado === true) ? '&nbsp;&nbsp;&nbsp;Habilitado&nbsp;&nbsp;&nbsp;' : 'Deshabilitado';
                            let token = $('input[name="__RequestVerificationToken"]').val();
                            let onClickFunction = `ChangeState(${data}, ${row.estaHabilitado}, '@Url.Action("CambiarEstado", "Conceptos")', '${token}', 'dataTableConceptos')`;

                            let html = `<span id="td${data}">` +
                                `<button type="submit" class="btn btn-xs btn-${btnClass}" onclick="${onClickFunction}">` +
                                `<i class="fa fa-${iClass}" aria-hidden="true"></i> <span class="d-none d-md-inline-block">${estado}</span>` +
                                '</button>' +
                                '</span>';

                            return html;
                        }
                    },
                    {
                        targets: -1,
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link" href="@Url.Action("Editar", "Conceptos")/${data}` +
                                '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> <span class="d-none d-md-inline-block">Editar</span></a>';
                        }
                    }
                ],
                bStateSave: true,
                bDestroy: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todas"]],
                iDisplayLength: 5,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true,
                initComplete: function () {
                    this.api().columns([0]).every(function () {
                        let column = this;

                        let select = document.createElement('select');
                        select.add(new Option('Tip.Concepto', ''));
                        column.footer().replaceChildren(select);
                        
                        select.addEventListener('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(select.value);
                            column.search(val ? '^' + val + '$' : '', true, false).draw();
                        });

                        column.data().unique().sort().each(function (d, j) {
                            if (column.search() === '^' + d + '$') {
                                select.add(new Option(d, d, true, true));
                            } else {
                                select.add(new Option(d, d));
                            }
                        });

                        $(select).click(function (e) {
                            e.stopPropagation();
                        });
                    });
                }
            });
        }

        function generarDatatablePlantillasPlanilla() {
            $('#dataTablePlantillaPlanilla').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaPlantillasPlanilla", "PlantillaPlanilla")',
                    'type': 'get'
                },
                columns: [
                    { data: 'categoriaPlanillaDesc' },
                    { data: 'plantillaPlanillaDesc' },
                    { data: 'plantillaPlanillaID' },
                    { data: 'plantillaPlanillaID' },
                    { data: 'plantillaPlanillaID' }
                ],
                columnDefs: [
                    {
                        targets: -3,
                        orderable: false,
                        render: function (data, type, row) {
                            let btnClass = (row.estaHabilitado === true) ? 'success' : 'secondary';
                            let iClass = (row.estaHabilitado === true) ? 'check-circle-o' : 'minus-circle';
                            let estado = (row.estaHabilitado === true) ? '&nbsp;&nbsp;&nbsp;Habilitado&nbsp;&nbsp;&nbsp;' : 'Deshabilitado';
                            let token = $('input[name="__RequestVerificationToken"]').val();
                            let onClickFunction = `ChangeState(${data}, ${row.estaHabilitado}, '@Url.Action("CambiarEstado", "PlantillaPlanilla")', '${token}', 'dataTablePlantillaPlanilla')`;

                            let html = `<span id="td${data}">` +
                                `<button type="submit" class="btn btn-xs btn-${btnClass}" onclick="${onClickFunction}">` +
                                `<i class="fa fa-${iClass}" aria-hidden="true"></i> <span class="d-none d-md-inline-block">${estado}</span>` +
                                '</button>' +
                                '</span>';

                            return html;
                        }
                    },
                    {
                        targets: -2,
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link-lg" href="@Url.Action("ConceptosAsignados", "PlantillaPlanillaConcepto")/${data}` +
                                '"><i class="fa bi-ui-checks" aria-hidden="true"></i> <span class="d-none d-md-inline-block">Asignar</span></a>';
                        }
                    },
                    {
                        targets: -1,
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link" href="@Url.Action("Editar", "PlantillaPlanilla")/${data}` +
                                '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> <span class="d-none d-md-inline-block">Editar</span></a>';
                        }
                    }
                ],
                bStateSave: true,
                bDestroy: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Todas"]],
                iDisplayLength: 10,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true
            });
        }
    </script>
}