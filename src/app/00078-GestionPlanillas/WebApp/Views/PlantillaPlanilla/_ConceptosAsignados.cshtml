@model IEnumerable<WebApp.Models.ConceptoAsignadoPlantillaModel>

<div class="modal-header bg-dark-gray" style="border-radius: .2rem .2rem 0px 0px">
    <h5 class="modal-title text-center"><i class="fa fa-tag"></i>&nbsp;@ViewBag.Title</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
</div>

<div class="modal-body">
    <div class="container-fluid mb-4">
        <dl class="row">
            <dt class="col-sm-3">Clase Planilla</dt>
            <dd class="col-sm-9">@ViewBag.ClasePlanillaDesc</dd>

            <dt class="col-sm-3">Categoría Planilla</dt>
            <dd class="col-sm-9">@ViewBag.CategoriaPlanillaDesc</dd>

            <dt class="col-sm-3">Descripción</dt>
            <dd class="col-sm-9">@ViewBag.PlantillaPlanillaDesc</dd>

            <dt class="col-sm-3">Estado</dt>
            <dd class="col-sm-9">
                @if (ViewBag.EstaHabilitado)
                {
                    <span class="text-success">Habilitado</span>
                }
                else
                {
                    <span class="text-secondary">Deshabilitado</span>
                }
            </dd>
        </dl>
    </div>
    <div class="container-fluid" id="spin-loader" style="display:none;">
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-info" role="status" style="width: 5rem; height: 5rem;">
                <span class="sr-only">Cargando...</span>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <span id="load-message" class="h5 mt-4"></span>
        </div>
    </div>
    <div class="container-fluid" id="content-body">
        <div class="table-responsive mb-4">
            <table class="table table-hover" id="dataTableConceptosAsignados" width="100%">
                <thead class="thead-dark">
                    <tr>
                        <th>Tip.Concepto</th>
                        <th>Cod.Concepto</th>
                        <th>Descripción</th>
                        <th>Estado</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count() > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.tipoConceptoDesc</td>
                                <td>@item.conceptoCod</td>
                                <td>@item.conceptoDesc</td>
                                <td>@item.estaHabilitado.ToString().ToLower()</td>
                                <td>@item.plantillaPlanillaConceptoID</td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>Tip.Concepto</th>
                        <th>Cod.Concepto</th>
                        <th>Descripción</th>
                        <th>Estado</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="modal-footer" id="div_msg">
            <a href="@Url.Action("AsignarConcepto","PlantillaPlanilla", new { id = ViewBag.PlantillaPlanillaID })" class="btn btn-primary" id="btn-agregar">
                <i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Agregar concepto
            </a>
            <button type="button" class="btn btn-secondary" id="btnCancel" data-dismiss="modal"><i class="fa fa-times-circle-o"></i>&nbsp;Cerrar</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    $('#dataTableConceptosAsignados').DataTable({
        columnDefs: [
            {
                targets: -2,
                render: function (data, type, row) {
                    let btnClass = (data === true) ? 'success' : 'secondary';
                    let iClass = (data === true) ? 'check-circle-o' : 'minus-circle';
                    let estado = (data === true) ? 'Habilitado' : 'Deshabilitado';
                    let token = $('input[name="__RequestVerificationToken"]').val();
                    let onClickFunction = `ChangeState(${row[4]}, ${data}, '@Url.Action("CambiarEstadoConcepto", "PlantillaPlanilla")', '${token}', 'dataTableConceptosAsignados')`;

                    let html = `<span id="td${row[4]}">` +
                        `<button type="submit" class="btn btn-xs btn-${btnClass}" onclick="${onClickFunction}">` +
                        `<i class="fa fa-${iClass}" aria-hidden="true"></i> <span class="d-none d-md-inline-block">${estado}</span>` +
                        '</button>' +
                        '</span>';

                    return html;
                }
            },
            {
                targets: -1,
                render: function (data, type, row) {
                    return `<a class="btn-editar" href="@Url.Action("EditarConcepto", "PlantillaPlanilla")/${data}` +
                        '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> <span class="d-none d-md-inline-block">Editar</span></a>';
                }
            }
        ],
        "bStateSave": true,
        bDestroy: true,
        lengthMenu: [[5, 10], [5, 10, "Todos"]],
        iDisplayLength: 5,
        language: {
            search: "Buscar: ",
            lengthMenu: "Mostrar _MENU_ filas",
            info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
            infoEmpty: "No se encontraron registros.",
            zeroRecords: "No hay data disponible.",
            emptyTable: "No hay data disponible.",
            paginate: {
                first: "Primero",
                previous: "Previo",
                next: "Siguiente",
                last: "Último"
            },
            aria: {
                sortAscending: ": activar para ordenar la columna en orden ascendente",
                sortDescending: ": activar para ordenar la columna en orden descendente"
            }
        }
    });

    $('.modal-body').on('click', '#btn-agregar', function (event) {
        event.preventDefault();
        var url = $(event.currentTarget).attr('href');
        loadForm(url, 'obteniendo formulario...')
    });

    $('.modal-body').on('click', '.btn-editar', function (event) {
        event.preventDefault();
        var url = $(event.currentTarget).attr('href');
        loadForm(url, 'obteniendo datos del concepto...');
    });

    function loadForm(url, message) {
        $('#load-message').html(message);

        $.ajax({
            url: url,
            type: "GET",
            beforeSend: function () {
                $('#content-body').hide();
                $('#spin-loader').show();
            },
            success: function (data) {
                $('#content-body').html(data);
                setTimeout(function () {
                    $('#spin-loader').hide();
                    $('#content-body').show();
                }, 300);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#content-body').html('<p class="alert alert-danger">' + jqXHR.responseText + '</p>');
                $('#spin-loader').hide();
                $('#content-body').show();
            }
        })
    }
</script>

