@model WebApp.ViewModels.RegistrarTasaViewModel
@Scripts.Render("~/bundles/jqueryval")


<div class="modal-header bg-dark-gray" style="border-radius: .2rem .2rem 0px 0px">
    <h5 class="modal-title text-center"><i class="fa fa-tag">&nbsp;</i> @ViewBag.Title</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
</div>
<div class="modal-body">
    <div class="container-fluid">

        @if (Model.I_TasaUnfvID.HasValue)
        {
            <p class="h4 mt-2 border-bottom">Editar Tasa</p>
        }
        else
        {
            <p class="h4 mt-2 border-bottom">Seleccionar concepto</p>
            <div class="form-group form-row mt-4" id="search-container">
                <label for="selectConcepto" class="control-label col-sm-3 d-sm-inline-block d-none text-right col-form-label">Buscar concepto:</label>
                <div class="col-sm-5 col-9">
                    @Html.DropDownList("selectConcepto", ViewBag.Conceptos as SelectList, "", new { Class = "select-filter-modal form-control form-control-sm" })
                </div>
                <div class="col-sm-4 col-3">
                    <button type="button" id="btn-agregar" class="btn btn-sm btn-outline-info"><i class="fa fa-check">&nbsp;</i> Seleccionar</button>
                </div>
                <hr />
            </div>

            <div id="search-loader" class="container-fluid" style="display:none;">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-info" role="status" style="width: 5rem; height: 5rem;">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="d-flex justify-content-center">
                        <span id="load-message" class="h5 mt-4"></span>
                    </div>
                </div>
            </div>
        }
    </div>

    <div style="min-height:100px;">
        <div id="alert-message" class="container-fluid" style="display:@(Model.MostrarFormulario ? "none" : "block");">
            <p class="alert alert-info text-center mt-3 mb-5">
                <span class="d-block"><i class="fa fa-2x fa-exclamation-circle"></i></span>
                Escoja un concepto de la lista y presione el boton <strong> seleccionar </strong>
            </p>
        </div>

        <div id="concepto-form" class="container-fluid" style="display:@(Model.MostrarFormulario ? "block" : "none");">

            @using (Ajax.BeginForm("Save", "Tasa", new { area = "" }, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "div_msg", OnBegin = "Load", OnComplete = "Stop" }))
            {
                @Html.Hidden("Submited", 0)
                @Html.AntiForgeryToken()

                <div class="form-group form-row">
                    @Html.HiddenFor(model => model.I_TasaUnfvID)
                    @Html.HiddenFor(model => model.I_ConceptoID)
                    @Html.HiddenFor(model => model.B_Fraccionable)
                    @Html.HiddenFor(model => model.B_ConceptoGeneral)
                    @Html.HiddenFor(model => model.B_AgrupaConcepto)
                    @Html.HiddenFor(model => model.I_AlumnosDestino)
                    @Html.HiddenFor(model => model.I_GradoDestino)
                    @Html.HiddenFor(model => model.I_TipoObligacion)
                    @Html.HiddenFor(model => model.B_Calculado)
                    @Html.HiddenFor(model => model.I_Calculado)
                    @Html.HiddenFor(model => model.B_AnioPeriodo)
                    @Html.HiddenFor(model => model.I_Anio)
                    @Html.HiddenFor(model => model.I_Periodo)
                    @Html.HiddenFor(model => model.B_Especialidad)
                    @Html.HiddenFor(model => model.C_CodRc)
                    @Html.HiddenFor(model => model.B_Dependencia)
                    @Html.HiddenFor(model => model.C_DepCod)
                    @Html.HiddenFor(model => model.B_GrupoCodRc)
                    @Html.HiddenFor(model => model.I_GrupoCodRc)
                    @Html.HiddenFor(model => model.B_ModalidadIngreso)
                    @Html.HiddenFor(model => model.I_ModalidadIngresoID)
                    @Html.HiddenFor(model => model.B_ConceptoAgrupa)
                    @Html.HiddenFor(model => model.I_ConceptoAgrupaID)
                    @Html.HiddenFor(model => model.B_ConceptoAfecta)
                    @Html.HiddenFor(model => model.I_ConceptoAfectaID)
                    @Html.HiddenFor(model => model.B_Porcentaje)
                    @Html.HiddenFor(model => model.C_Moneda)
                    @Html.HiddenFor(model => model.B_Migrado)

                    @Html.LabelFor(model => model.T_ConceptoPagoDesc, new { @class = "control-label col-12" })
                    <div class="col-10">
                        @Html.TextBoxFor(model => model.T_ConceptoPagoDesc, new { @class = "form-control disabled" })
                        <p class="text-danger small">@Html.ValidationMessageFor(model => model.T_ConceptoPagoDesc)</p>
                    </div>
                    @if (Model.PermitirCambiarTasa)
                    {
                        <div class="col-2">
                            <button type="button" id="btn-remove" class="btn btn-block btn-outline-danger"><i class="fa fa-trash-o"></i><span class="d-md-inline-block d-none">&nbsp;Borrar</span></button>
                        </div>
                    }
                </div>

                <div class="row">
                    <div class="col-lg-6 col-12">
                        <div class="form-row">
                            <div class="col-7">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.T_Clasificador, new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.T_Clasificador, new { @class = "form-control" })
                                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.T_Clasificador)</p>
                                </div>
                            </div>
                            <div class="col-5">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.C_CodTasa, new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.C_CodTasa, new { @class = "form-control", @maxlength = "5" })
                                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.C_CodTasa)</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <label class="control-label col-sm-4" for="Monto">Monto</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.M_Monto, "{0:f4}", new { @class = "form-control" })
                                <p class="text-danger small">@Html.ValidationMessageFor(model => model.M_Monto)</p>
                            </div>
                            <label class="control-label col-md-4" for="Monto_Minimo">Monto Mínimo</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.M_MontoMinimo, "{0:f4}", new { @class = "form-control" })
                                <p class="text-danger small">@Html.ValidationMessageFor(model => model.M_MontoMinimo)</p>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.N_NroPagos, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.N_NroPagos, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(model => model.N_NroPagos)</p>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6 col-12 border-left">
                        <div class="form-group">
                            <label class="control-label" for="T_DescripcionLarga">Descripción Larga</label>
                            @Html.TextAreaFor(model => model.T_DescripcionLarga, new { @class = "form-control" })
                            <p class="text-danger small">@Html.ValidationMessageFor(model => model.T_DescripcionLarga)</p>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="T_Documento">Sustento / Observación</label>
                            @Html.TextAreaFor(model => model.T_Documento, new { @class = "form-control" })
                            <p class="text-danger small">@Html.ValidationMessageFor(model => model.T_Documento)</p>
                        </div>
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.CtaDepositoID, new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.ListBoxFor(model => model.CtaDepositoID, ViewBag.CtasDeposito as SelectList, new { @class = "select-multiple form-control text-uppercase", multiple = "true" })
                        <p class="text-danger small">@Html.ValidationMessageFor(model => model.CtaDepositoID)</p>
                    </div>
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.servicioID, new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.ListBoxFor(model => model.servicioID, ViewBag.CodServicioBcoComercioTasas as SelectList, new { @class = "select-multiple form-control text-uppercase", multiple = "true" })
                        <p class="text-danger small">@Html.ValidationMessageFor(model => model.servicioID)</p>
                    </div>
                </div>

                <div class="row d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary center" id="btnsubmit"><i class="fa fa-save"></i>&nbsp;Guardar</button>
                </div>
            }

        </div>
    </div>
</div>
<div class="modal-footer" id="div_msg">
    <button type="button" class="btn btn-secondary" id="btnCancel" data-dismiss="modal"><i class="fa fa-times-circle-o">&nbsp;</i>Cancelar</button>
</div>

@*<script type="text/javascript">

    $(document).ready(function () {

        $('.select-multiple').select2({
            dropdownParent: $('#modal-container-lg'),
            placeholder: "[ SELECCIONAR ]"
        }).on('closing', function (e) {
            e.stopPropagation();
        });

        $('.select-filter-modal').select2({
            dropdownParent: $('#modal-container-lg'),
            placeholder: "[ SELECCIONAR ]"
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('#btn-agregar').on('click', function (event) {
            event.preventDefault();
            let selectedValue = $('#selectConcepto').val();

            if (selectedValue === "" || selectedValue == null) {
                return false;
            }

            GetDefaultValuesConcepto(selectedValue);
        });

        function GetDefaultValuesConcepto(value, text) {

            $.ajax({
                url: ('@Url.Action("GetDefaultValuesConcepto", "Service", new { httproute = "ActionApi" })/' + value),
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                beforeSend: function () {
                    $('#alert-message').hide();
                    $('#search-loader').show();
                },
                success: function (data) {
                    DisableSearh(true);

                    $('#I_ConceptoID').val(data['Id']);
                    $('#T_ConceptoPagoDesc').val(data['NombreConcepto']);

                    $('#B_Fraccionable').val(data['B_Fraccionable']);
                    $('#B_ConceptoGeneral').val(data['B_ConceptoGeneral']);
                    $('#B_AgrupaConcepto').val(data['B_AgrupaConcepto']);
                    $('#I_TipoObligacion').val(data['TipoObligacion']);

                    $('#T_Clasificador').val(data['Clasificador']);
                    $('#C_CodTasa').val(data['T_ClasifCorto']);

                    $('#B_Calculado').val(data['Calculado']);
                    $('#I_Calculado').val(data['TipoCalculo']);

                    $('#B_GrupoCodRc').val(data['B_GrupoCodRc']);
                    $('#I_GrupoCodRc').val(data['I_GrupoCodRc']);

                    $('#B_ModalidadIngreso').val(data['B_ModalidadIngreso']);
                    $('#I_ModalidadIngresoID').val(data['I_ModalidadIngresoID']);

                    $('#B_ConceptoAgrupa').val(data['AgupaConceptos']);
                    $('#I_ConceptoAgrupaID').val(data['I_ConceptoAgrupaID']);

                    $('#N_NroPagos').val(data['N_NroPagos']);
                    $('#B_Porcentaje').val(data['B_Porcentaje']);
                    $('#C_Moneda').val(data['C_Moneda']);
                    $('#M_Monto').val(data['Monto']);
                    $('#M_MontoMinimo').val(data['MontoMinimo']);

                    $('#T_DescripcionLarga').val(data['T_DescripcionLarga']);
                    $('#T_Documento').val(data['T_Documento']);
                    $('#B_Migrado').val('False');

                    $('#search-container').hide();
                    $('#concepto-form').show();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#alert-message p.alert').removeClass('alert-info').addClass('alert-danger').html(jqXHR.responseText)
                    $('#alert-message').show();
                },
                complete: function () {
                    $('#search-loader').hide();
                }
            })
        }

        function DisableSearh(flag) {
            $('#selectConcepto').val(null).trigger('change');
            $('#selectConcepto').prop('disabled', flag);
            $('#btn-agregar').prop('disabled', flag);
        }

        $('#btn-remove').on('click', function (event) {
            event.preventDefault();

            $('#concepto-form').hide();
            $('#search-loader').show();

            setTimeout(function () {
                $('#search-loader').hide();
                $('#search-container').show();
                $('#alert-message').show();
            }, 500);

            DisableSearh(false);
        });
    });
</script>*@
