@model WebApp.Models.PlantillaPlanillaModel

<div class="modal-header bg-dark-gray" style="border-radius: .2rem .2rem 0px 0px">
    <h5 class="modal-title text-center"><i class="fa fa-tag"></i>&nbsp;@ViewBag.Title</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
</div>

<div class="modal-body">
    <div class="container-fluid mb-4">
        <dl class="row">
            <dt class="col-sm-3">Clase Planilla</dt>
            <dd class="col-sm-9">@Model.clasePlanillaDesc</dd>

            <dt class="col-sm-3">Categoría Planilla</dt>
            <dd class="col-sm-9">@Model.categoriaPlanillaDesc</dd>

            <dt class="col-sm-3">Descripción</dt>
            <dd class="col-sm-9">@Model.plantillaPlanillaDesc</dd>

            <dt class="col-sm-3">Estado</dt>
            <dd class="col-sm-9">
                @if (Model.estaHabilitado)
                {
                    <span class="text-success">Habilitado</span>
                }
                else
                {
                    <span class="text-secondary">Deshabilitado</span>
                }
            </dd>
        </dl>

        <hr />
    </div>
    <div class="container-fluid" id="spin-loader" style="display:none;">
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-info" role="status" style="width: 5rem; height: 5rem;">
                <span class="sr-only">Cargando...</span>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <span id="load-message" class="h5 mt-4"></span>
        </div>
    </div>
    <div class="container-fluid" id="content-body">
        <div class="table-responsive mb-4">
            <table class="table table-hover" id="dataTableConceptosAsignados" width="100%">
                <thead class="thead-dark">
                    <tr>
                        <th>Tip.Concepto</th>
                        <th>Descripción</th>
                        <th>Valor</th>
                        <th>Aplica a</th>
                        <th>Estado</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Tip.Concepto</th>
                        <th>Descripción</th>
                        <th>Valor</th>
                        <th>Aplica a</th>
                        <th>Estado</th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
        <div class="modal-footer" id="div_msg">
            <a href="@Url.Action("Asignar","PlantillaPlanillaConcepto", new { id = Model.plantillaPlanillaID.Value })" class="btn btn-primary" id="btn-agregar">
                <i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Agregar concepto
            </a>
            <button type="button" class="btn btn-secondary" id="btnCancel" data-dismiss="modal"><i class="fa fa-times-circle-o"></i>&nbsp;Cerrar</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    generarDatatableConceptosAsignados();

    $('.modal-body').on('click', '#btn-agregar', function (event) {
        event.preventDefault();
        var url = $(event.currentTarget).attr('href');
        loadForm(url, 'obteniendo formulario...')
    });

    $('.modal-body').on('click', '.btn-editar', function (event) {
        event.preventDefault();
        var url = $(event.currentTarget).attr('href');
        loadForm(url, 'obteniendo datos del concepto...');
    });

    $('.modal-body').on('click', '.btn-eliminar', function (event) {
        event.preventDefault();

        let id = $(this).data("id");
        let token = $('input[name="__RequestVerificationToken"]').val();

        Swal.fire({
            title: '',
            text: '¿Desea anular este registro?',
            icon: MENSAJE.WARNING,
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, continuar.',
            cancelButtonText: 'No, cancelar.'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("Eliminar", "PlantillaPlanillaConcepto")/' + id,
                    type: "POST",
                    data: { __RequestVerificationToken: token },
                    beforeSend: function () {
                        $('#content-body').hide();
                        $('#spin-loader').show();
                    },
                    success: function (data) {
                        $('#content-body').show();
                        $('#spin-loader').hide();

                        if (data.Success) {
                            generarDatatableConceptosAsignados();
                            mostrarMensajeSistema(data.Message, MENSAJE.SUCCESS);
                        } else {
                            mostrarMensajeSistema(data.Message, MENSAJE.ERROR);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $('#content-body').html('<p class="alert alert-danger">' + jqXHR.responseText + '</p>');
                        $('#spin-loader').hide();
                        $('#content-body').show();
                    }
                });
            }
        });
    });

    function generarDatatableConceptosAsignados() {
        $('#dataTableConceptosAsignados').DataTable({
            ajax: {
                'url': '@Url.Action("ObtenerConceptosAsignados", "PlantillaPlanillaConcepto", new { id = Model.plantillaPlanillaID.Value })',
                'type': 'get'
            },
            columns: [
                { data: 'tipoConceptoDesc' },
                { data: 'conceptoDesc' },
                { data: 'valorConceptoFormateado' },
                { data: 'descFiltro' },
                { data: 'estaHabilitado' },
                { data: 'plantillaPlanillaConceptoID' },
                { data: 'plantillaPlanillaConceptoID' }
            ],
            columnDefs: [
                {
                    targets: -3,
                    orderable: false,
                    render: function (data, type, row) {
                        let btnClass = (row.estaHabilitado === true) ? 'success' : 'secondary';
                        let iClass = (row.estaHabilitado === true) ? 'check-circle-o' : 'minus-circle';
                        let estado = (row.estaHabilitado === true) ? 'Habilitado' : 'Deshabilitado';

                        let url = '@Url.Action("CambiarEstado", "PlantillaPlanillaConcepto")';
                        let token = $('input[name="__RequestVerificationToken"]').val();
                        let container = 'dataTableConceptosAsignados';

                        let onClickFunction = `ChangeState(${row.plantillaPlanillaConceptoID}, ${row.estaHabilitado}, '${url}', '${token}', '${container}')`;

                        let html = `<span id="td${row.plantillaPlanillaConceptoID}">` +
                            `<button type="submit" class="btn btn-xs btn-${btnClass}" onclick="${onClickFunction}">` +
                            `<i class="fa fa-${iClass}" aria-hidden="true"></i> <span class="d-none d-md-inline-block">${estado}</span>` +
                            '</button>' +
                            '</span>';

                        return html;
                    }
                },
                {
                    targets: -2,
                    orderable: false,
                    render: function (data, type, row) {
                        return `<a class="btn-editar" href="@Url.Action("Editar", "PlantillaPlanillaConcepto")/${data}` +
                            '" title="Editar"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                    }
                },
                {
                    targets: -1,
                    orderable: false,
                    render: function (data, type, row) {
                        return `<a class="btn-eliminar" href="#" data-id="${data}"` +
                            '" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></a>';
                    }
                }
            ],
            "bStateSave": true,
            bDestroy: true,
            lengthMenu: [[5, 10], [5, 10, "Todos"]],
            iDisplayLength: 5,
            language: {
                search: "Buscar: ",
                lengthMenu: "Mostrar _MENU_ filas",
                info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                infoEmpty: "No se encontraron registros.",
                zeroRecords: "No hay data disponible.",
                emptyTable: "No hay data disponible.",
                paginate: {
                    first: "Primero",
                    previous: "Previo",
                    next: "Siguiente",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": activar para ordenar la columna en orden ascendente",
                    sortDescending: ": activar para ordenar la columna en orden descendente"
                }
            }
        });
    }

    function loadForm(url, message) {
        $('#load-message').html(message);

        $.ajax({
            url: url,
            type: "GET",
            beforeSend: function () {
                $('#content-body').hide();
                $('#spin-loader').show();
            },
            success: function (data) {
                $('#content-body').html(data);
                setTimeout(function () {
                    $('#spin-loader').hide();
                    $('#content-body').show();
                }, 300);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#content-body').html('<p class="alert alert-danger">' + jqXHR.responseText + '</p>');
                $('#spin-loader').hide();
                $('#content-body').show();
            }
        })
    }
</script>

