@model WebApp.Models.ConceptoAsignadoPlantillaModel
@Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm((string)ViewBag.Action, "PlantillaPlanillaConcepto", new { area = "" }, new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "div_msg",
    OnBegin = "Load",
    OnComplete = "Stop"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.plantillaPlanillaID)
    @Html.HiddenFor(model => model.plantillaPlanillaConceptoID)

    <div class="form-row">
        <div class="col-12">
            <div class="form-group row">
                @Html.LabelFor(model => model.conceptoID, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.conceptoID, ViewBag.ListaConceptos as SelectList, "[ SELECCIONAR ]", new { @class = "form-control text-uppercase select-filter-modal" })
                    @Html.ValidationMessageFor(model => model.conceptoID, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-8">
            <div class="form-group row">
                @Html.LabelFor(model => model.valorConcepto, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.valorConcepto, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.valorConcepto, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-4">
            <div class="form-check form-check-inline">
                <label class="form-check-label" onclick="mostrarPorcetual(false);">@Html.RadioButtonFor(model => model.esValorFijo, true) Monto fijo (S/.)</label>
            </div>
            <div class="form-check form-check-inline">
                <label class="form-check-label" onclick="mostrarPorcetual(true);">@Html.RadioButtonFor(model => model.esValorFijo, false) Valor porcentual (%)</label>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-12">
            <div class="form-group row">
                <label class="col-sm-2 control-label">&nbsp;</label>
                <div class="col-sm-10">
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.valorEsExterno, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.valorEsExterno, new { @class = "form-check-label" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-12">
            <div class="form-group row">
                <label class="col-sm-2 control-label">@ViewBag.DescFiltro1 @Html.CheckBoxFor(model => model.aplicarFiltro1)</label>
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.filtro1, ViewBag.ListaFiltro1 as SelectList, "[ SELECCIONAR ]", new { @class = "form-control text-uppercase", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.filtro1, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-12">
            <div class="form-group row">
                <label class="col-sm-2 control-label">@ViewBag.DescFiltro2 @Html.CheckBoxFor(model => model.aplicarFiltro2)</label>
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.filtro2, ViewBag.ListaFiltro2 as SelectList, "[ SELECCIONAR ]", new { @class = "form-control text-uppercase", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.filtro2, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row" style="display: none;" id="divConceptoPorcentaje">
        <div class="col-12">
            <div class="form-group row">
                @Html.LabelFor(model => model.conceptoPorcentajeID, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.conceptoPorcentajeID, ViewBag.ListaConceptosIncluidos as SelectList, "[ SELECCIONAR ]", new { @class = "select-multiple form-control text-uppercase", multiple = "true" })
                </div>
            </div>
        </div>
    </div>

    <div class="row d-flex justify-content-center">
        <button type="submit" class="btn btn-primary center" id="btnsubmit"><i class="fa fa-save"></i> Guardar</button>
    </div>
}

<div class="modal-footer mt-4" id="div_msg">
    <a href="@Url.Action("ConceptosAsignados","PlantillaPlanillaConcepto", new { id = Model.plantillaPlanillaID })" class="btn btn-outline-primary" id="btn-return">
        <i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Volver a la lista
    </a>
    <button type="button" class="btn btn-secondary" id="btnCancel" data-dismiss="modal"><i class="fa fa-times-circle-o"></i>&nbsp;Cerrar</button>
</div>

<script type="text/javascript">
    $(function () {
        @if(Model.aplicarFiltro1)
        {
            <text>cambiarEstadoCampoFiltro(true, 'filtro1');</text>
        }

        @if(Model.aplicarFiltro2)
        {
            <text>cambiarEstadoCampoFiltro(true, 'filtro2');</text>
        }

        @if(Model.valorEsExterno)
        {
            <text>cambiarEstadoCampoMonto(false);</text>
        }

        $('#content-body').on('click', '#btn-return', function (event) {
            event.preventDefault();

            let url = $(event.currentTarget).attr("href");

            loadForm(url, "cargando formulario...");
        });

        $('.select-filter-modal').select2({
            theme: 'bootstrap4',
            dropdownParent: $('#modal-container-lg'),
            placeholder: "[ SELECCIONAR ]"
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('.select-multiple').select2({
            dropdownParent: $('#modal-container-lg'),
            placeholder: "[ SELECCIONAR ]"
        }).on('closing', function (e) {
            e.stopPropagation();
        });

        $('#content-body').on('click', '#aplicarFiltro1', function (event) {
            let checked = $(this).is(':checked');
            cambiarEstadoCampoFiltro(checked, 'filtro1');
        });

        $('#content-body').on('click', '#aplicarFiltro2', function (event) {
            let checked = $(this).is(':checked');
            cambiarEstadoCampoFiltro(checked, 'filtro2');
        });

        $('#content-body').on('click', '#valorEsExterno', function (event) {
            let checked = $(this).is(':checked');
            cambiarEstadoCampoMonto(!checked);
        });
    });

    function loadForm(url, message) {
        $('#load-message').html(message);

        $('#content-body').hide();
        $('#spin-loader').show();

        let modal = $('#modal-container-lg');

        setTimeout(function () {
            modal.find('.modal-content').load(url)
        }, 600);
    }

    function cambiarEstadoCampoFiltro(habilitarCampo, idCampo) {
        let id = '#content-body #' + idCampo;
        if (habilitarCampo) {
            $(id).prop('disabled', '');
        } else {
            $(id).val(null);
            $(id).prop('disabled', 'disabled');
        }
    }

    function cambiarEstadoCampoMonto(habilitarCampo) {
        if (habilitarCampo) {
            $('#content-body #valorConcepto').prop('disabled', '')
        } else {
            debugger;
            $('#content-body #valorConcepto').val('');
            $('#content-body #valorConcepto').prop('disabled', 'disabled')
        }
    }

    function mostrarPorcetual(mostrar) {
        if (mostrar) {
            $(divConceptoPorcentaje).css('display', 'flex');
        } else {
            $(divConceptoPorcentaje).css('display', 'none');
        }
    }
</script>
