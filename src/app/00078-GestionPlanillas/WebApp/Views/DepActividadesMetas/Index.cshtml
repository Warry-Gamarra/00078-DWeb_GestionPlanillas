<div class="container-fluid">
    <div class="col-12 mb-4">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-cogs" aria-hidden="true">&nbsp;</i>Configuración </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa fa-flag">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="row">
        <div class="col-lg-6 col-md-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <span class="h4">Actividades</span>
                    <a href="@Url.Action("Nuevo", "Actividades")" class="btn btn-primary pull-right modal-link">
                        <i class="fa fa-plus-circle" aria-hidden="true"></i> Nueva actividad
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="dataTableActividades" width="100%">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Cod.Actividad</th>
                                    <th>Descripción</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Cod.Actividad</th>
                                    <th>Descripción</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-md-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <span class="h4">Metas</span>
                    <a href="@Url.Action("Nuevo", "Metas")" class="btn btn-primary pull-right modal-link">
                        <i class="fa fa-plus-circle" aria-hidden="true"></i> Nueva meta
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="dataTableMetas" width="100%">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Cod.Meta</th>
                                    <th>Descripción</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Cod.Meta</th>
                                    <th>Descripción</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <span class="h4">Actividades y Metas</span>
            <a href="@Url.Action("Nuevo", "DepActividadesMetas")" class="btn btn-primary pull-right modal-link">
                <i class="fa fa-plus-circle" aria-hidden="true"></i> Nuevo registro
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="dataTableDepActividadesMetas" width="100%">
                    <thead class="thead-dark">
                        <tr>
                            <th>Año</th>
                            <th>Clase</th>
                            <th>Cod.Dep.</th>
                            <th>Dependencia</th>
                            <th>Actividad</th>
                            <th>Meta</th>
                            <th>Descripción</th>
                            <th>Cod.Cat.Presup.</th>
                            <th>Cat.Presupuestal</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Año</th>
                            <th>Clase</th>
                            <th>Cod.Dep.</th>
                            <th>Dependencia</th>
                            <th>Actividad</th>
                            <th>Meta</th>
                            <th>Descripción</th>
                            <th>Cod.Cat.Presup.</th>
                            <th>Cat.Presupuestal</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var modalActivo = null;

        $(document).ready(function () {
            generarDataTableDepActividadesMetas();
            generarDataTableActividades();
            generarDataTableMetas();

            $(".modal").on('hide.bs.modal', function () {
                if (modalActivo === "modal-dependencia-actividad-meta") {
                    generarDataTableDepActividadesMetas();
                } else if (modalActivo === "modal-actividad") {
                    generarDataTableActividades();
                } else if (modalActivo === "modal-meta") {
                    generarDataTableMetas();
                }
            });

            $('#dataTableDepActividadesMetas').on('click', '.btn-eliminar', function (event) {
                event.preventDefault();

                let id = $(this).data("id");
                let token = $('input[name="__RequestVerificationToken"]').val();

                Swal.fire({
                    title: '',
                    text: '¿Desea eliminar este registro?',
                    icon: MENSAJE.WARNING,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, continuar.',
                    cancelButtonText: 'No, cancelar.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Eliminar", "DepActividadesMetas")/' + id,
                            type: "POST",
                            data: { __RequestVerificationToken: token },
                            beforeSend: function () {
                            },
                            success: function (data) {
                                if (data.Success) {
                                    mostrarMensajeSistema(data.Message, MENSAJE.SUCCESS);
                                    generarDataTableDepActividadesMetas();
                                } else {
                                    mostrarMensajeSistema(data.Message, MENSAJE.ERROR);
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                toastr.error(errorThrown);
                            }
                        });
                    }
                });
            });

            $('#dataTableActividades').on('click', '.btn-eliminar-actividad', function (event) {
                event.preventDefault();

                let id = $(this).data("id");
                let token = $('input[name="__RequestVerificationToken"]').val();

                Swal.fire({
                    title: '',
                    text: '¿Desea eliminar este registro?',
                    icon: MENSAJE.WARNING,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, continuar.',
                    cancelButtonText: 'No, cancelar.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Eliminar", "Actividades")/' + id,
                            type: "POST",
                            data: { __RequestVerificationToken: token },
                            beforeSend: function () {
                            },
                            success: function (data) {
                                if (data.Success) {
                                    mostrarMensajeSistema(data.Message, MENSAJE.SUCCESS);
                                    generarDataTableActividades();
                                } else {
                                    mostrarMensajeSistema(data.Message, MENSAJE.ERROR);
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                toastr.error(errorThrown);
                            }
                        });
                    }
                });
            });

            $('#dataTableMetas').on('click', '.btn-eliminar-meta', function (event) {
                event.preventDefault();

                let id = $(this).data("id");
                let token = $('input[name="__RequestVerificationToken"]').val();

                Swal.fire({
                    title: '',
                    text: '¿Desea eliminar este registro?',
                    icon: MENSAJE.WARNING,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, continuar.',
                    cancelButtonText: 'No, cancelar.'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Eliminar", "Metas")/' + id,
                            type: "POST",
                            data: { __RequestVerificationToken: token },
                            beforeSend: function () {
                            },
                            success: function (data) {
                                if (data.Success) {
                                    mostrarMensajeSistema(data.Message, MENSAJE.SUCCESS);
                                    generarDataTableMetas();
                                } else {
                                    mostrarMensajeSistema(data.Message, MENSAJE.ERROR);
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                toastr.error(errorThrown);
                            }
                        });
                    }
                });
            });
        });



        function generarDataTableDepActividadesMetas() {
            $('#dataTableDepActividadesMetas').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaDepActividadMetas", "DepActividadesMetas")',
                    'type': 'get'
                },
                columns: [
                    { data: 'anio' },
                    { data: 'categoriaPlanillaDesc' },
                    { data: 'dependenciaCod' },
                    { data: 'dependenciaDesc' },
                    { data: 'actividadCod' },
                    { data: 'metaCod' },
                    { data: 'descripcion' },
                    { data: 'categoriaPresupCod' },
                    { data: 'categoriaPresupDesc' },
                    { data: 'depActividadMetaID', width: '5%' },
                    { data: 'depActividadMetaID', width: '5%' }
                ],
                columnDefs: [
                    {
                        targets: -2,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link" href="@Url.Action("Editar", "DepActividadesMetas")/${data}` +
                                '" title="Editar"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                        }
                    },
                    {
                        targets: -1,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="btn-eliminar" href="#" data-id="${data}"` +
                                '" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></a>';
                        }
                    }
                ],
                bStateSave: true,
                bDestroy: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todas"]],
                iDisplayLength: 10,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true,
                initComplete: function () {
                    this.api().columns([0]).every(function () {
                        let column = this;

                        let select = document.createElement('select');
                        select.add(new Option('Año', ''));
                        column.footer().replaceChildren(select);

                        select.addEventListener('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(select.value);
                            column.search(val ? '^' + val + '$' : '', true, false).draw();
                        });

                        column.data().unique().sort().each(function (d, j) {
                            if (column.search() === '^' + d + '$') {
                                select.add(new Option(d, d, true, true));
                            } else {
                                select.add(new Option(d, d));
                            }
                        });

                        $(select).click(function (e) {
                            e.stopPropagation();
                        });
                    });
                }
            });
        }

        function generarDataTableActividades() {
            $('#dataTableActividades').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaActividades", "Actividades")',
                    'type': 'get'
                },
                columns: [
                    { data: 'actividadCod' },
                    { data: 'actividadDesc' },
                    { data: 'actividadID', width: '8%' },
                    { data: 'actividadID', width: '8%' }
                ],
                columnDefs: [
                    {
                        targets: -2,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link" href="@Url.Action("Editar", "Actividades")/${data}` +
                                '" title="Editar"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                        }
                    },
                    {
                        targets: -1,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="btn-eliminar-actividad" href="#" data-id="${data}"` +
                                '" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></a>';
                        }
                    }
                ],
                bStateSave: true,
                bDestroy: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todas"]],
                iDisplayLength: 10,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true
            });
        }

        function generarDataTableMetas() {
            $('#dataTableMetas').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaMetas", "Metas")',
                    'type': 'get'
                },
                columns: [
                    { data: 'metaCod' },
                    { data: 'metaDesc' },
                    { data: 'metaID', width: '8%' },
                    { data: 'metaID', width: '8%' }
                ],
                columnDefs: [
                    {
                        targets: -2,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="modal-link" href="@Url.Action("Editar", "Metas")/${data}` +
                                '" title="Editar"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                        }
                    },
                    {
                        targets: -1,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<a class="btn-eliminar-meta" href="#" data-id="${data}"` +
                                '" title="Eliminar"><i class="fa fa-trash" aria-hidden="true"></i></a>';
                        }
                    }
                ],
                bStateSave: true,
                bDestroy: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todas"]],
                iDisplayLength: 10,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true
            });
        }
    </script>
}