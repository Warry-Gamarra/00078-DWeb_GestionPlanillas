@model IEnumerable<WebApp.Models.ConceptoModel>
@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12 mb-4">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-cogs">&nbsp;</i>Configuración </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-ui-checks">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <span class="h4">Conceptos</span>
            <a href="@Url.Action("Nuevo", "Conceptos")" class="btn btn-primary pull-right modal-link">
                <i class="fa fa-plus-circle"></i> Nuevo concepto
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive" style="min-height:300px">
                @Html.Grid(Model).Columns(columns =>
                {
                    columns.Add(c => c.conceptoCod).Titled("Cod.Concepto").Css("text-left").Filterable(true);
                    columns.Add(c => c.tipoConceptoDesc).Titled("Tip.Concepto").Css("text-left").Filterable(true);
                    columns.Add(c => c.conceptoDesc).Titled("Descrirpción").Css("text-left").Filterable(true);
                    columns.Add(c => c.estaHabilitado).SetWidth(100).Css("text-center").Encoded(false).Sanitized(false)
                        .RenderValueAs(model => model.estaHabilitado ?
                            @Html.Raw("<span id=\"td" + @model.conceptoID + "\"><button type=\"submit\" class=\"btn btn-xs btn-success\" onclick=\"ChangeStateReloadPage(" + @model.conceptoID + ", " + @model.estaHabilitado.ToString().ToLower() + ", '" + @Url.Action("CambiarEstado", "Conceptos") + "');\"><i class=\"fa fa-check-circle-o\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Habilitado</span></button></span>") :
                            @Html.Raw("<span id=\"td" + @model.conceptoID + "\"><button type=\"submit\" class=\"btn btn-xs btn-secondary\" onclick=\"ChangeStateReloadPage(" + @model.conceptoID + ", " + @model.estaHabilitado.ToString().ToLower() + ", '" + @Url.Action("CambiarEstado", "Conceptos") + "');\"><i class=\"fa fa-minus-circle\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Deshabilitado</span></button></span>"))
                        .Filterable(true).SetWidth(160).Titled("Estado");
                    columns.Add().SetWidth(150).Encoded(false).Sanitized(false).RenderValueAs(model => @<a href="@Url.Action("Editar", "Conceptos", new { id = model.conceptoID })" class="modal-link"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> <span class="d-none d-md-inline-block">Editar</span></a>);
}).WithPaging(5).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <span class="h4">Plantillas</span>
            <a href="@Url.Action("Nuevo", "PlantillaPlanilla")" class="btn btn-primary pull-right modal-link">
                <i class="fa fa-plus-circle"></i> Nueva Plantilla
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="dataTablePlantillaPlanilla">
                    <thead class="thead-dark">
                        <tr>
                            <th>categoriaPlanillaDesc</th>
                            <th>plantillaPlanillaDesc</th>
                            <th>estaHabilitado</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>categoriaPlanillaDesc</th>
                            <th>plantillaPlanillaDesc</th>
                            <th>estaHabilitado</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
<script type="text/javascript">
    $(document).ready(function () {
        generarDatatable();
    });

    function generarDatatable() {
        $('#dataTablePlantillaPlanilla').DataTable({
            ajax: {
                'url': 'http://localhost:1145/PlantillaPlanilla/ObtenerListaPlantillasPlanilla',
                'type': 'get'
            },
            columns: [
                { data: 'categoriaPlanillaDesc' },
                { data: 'plantillaPlanillaDesc' },
                { data: 'estaHabilitado' }
            ],
            "bStateSave": true,
            bDestroy: true,
            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Todas"]],
            iDisplayLength: 10,
            language: {
                search: "Buscar: ",
                lengthMenu: "Mostrar _MENU_ filas",
                info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                infoEmpty: "No se encontraron registros.",
                zeroRecords: "No hay data disponible.",
                emptyTable: "No hay data disponible.",
                paginate: {
                    first: "Primero",
                    previous: "Previo",
                    next: "Siguiente",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": activar para ordenar la columna en orden ascendente",
                    sortDescending: ": activar para ordenar la columna en orden descendente"
                }
            }
        });
    }
    </script>
}