<div class="container-fluid">
    <div class="col-12 mb-4">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-refresh">&nbsp;</i>Operaciones </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa fa-table">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="col-12 mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body bg-light-gray">
                        @using (Html.BeginForm("Generar", "Planillas", FormMethod.Get, new { id = "frmBusquedaTrabajador" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-row">
                                <div class="form-group col-lg-2 col-md-4 col-6">
                                    @Html.Label("anio", "Año", new { @class = "control-label" })
                                    @Html.DropDownList("anio", ViewBag.ListaAños as SelectList, null, new { @class = "form-control" })
                                </div>

                                <div class="form-group col-lg-2 col-md-4 col-6">
                                    @Html.Label("mes", "Mes", new { @class = "control-label" })
                                    @Html.DropDownList("mes", ViewBag.ListaMeses as SelectList, null, new { @class = "form-control text-uppercase" })
                                </div>

                                <div class="form-group col-lg-3 col-md-4 col-6">
                                    <label for="idCategoria">Categoria</label>
                                    @Html.DropDownList("idCategoria", ViewBag.ListaCategoriasPlanillas as SelectList, new { @class = "form-control text-uppercase" })
                                </div>

                                <div class="form-group col-lg-2 col-4">
                                    <label>&nbsp;</label>
                                    @Html.Hidden("busqueda", true)
                                    <button type="button" class="btn btn-block btn-outline-primary"><i class="fa fa-fw fa-search"></i> Verificar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <p class="h5">Relación de trabajadores registrados en el sistema</p>
                    
                    <div id="divBtnGenerar" class="form-group col-lg-2 col-4 pl-0" style="display: none;">
                        <button type="button" id="btnGenerar" class="btn btn-block btn-outline-primary"><i class="fa fa-fw fa-cogs"></i> Generar Planilla</button>
                    </div>

                    <table class="table table-hover" id="dataTableTrabajadoresAptos" width="100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>Planilla</th>
                                <th>Descripción</th>
                                <th>Cod.Per.</th>
                                <th>Doc.Identidad</th>
                                <th>Apellidos y Nombres</th>
                                <th>Vínculo</th>
                                <th>Dependencia</th>
                                <th>Estado</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Planilla</th>
                                <th>Descripción</th>
                                <th>Cod.Per.</th>
                                <th>Doc.Identidad</th>
                                <th>Apellidos y Nombres</th>
                                <th>Vínculo</th>
                                <th>Dependencia</th>
                                <th>Estado</th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            generarDatatableTrabajadoresAptos(null, null, null);

            $("#frmBusquedaTrabajador").on("change", "#anio", function () {
                let cmbDestino = $('#frmBusquedaTrabajador #mes');

                let url = '@Url.Action("ObtenerMesesPorAnio", "General")';

                CargarMeses(this, cmbDestino, url);
            });

            $("#frmBusquedaTrabajador").on("click", "button", function () {
                let anio = $("#frmBusquedaTrabajador #anio").val();
                let mes = $("#frmBusquedaTrabajador #mes").val();
                let idCategoria = $("#frmBusquedaTrabajador #idCategoria").val();

                generarDatatableTrabajadoresAptos(anio, mes, idCategoria);
            });

            $(document).on("click", "#btnGenerar", function () {
                let anio = $('#frmBusquedaTrabajador #anio').val();
                let mes = $('#frmBusquedaTrabajador #mes').val();
                let idCategoria = $('#frmBusquedaTrabajador #idCategoria').val();

                let parametros = {
                    anio: anio,
                    mes: mes,
                    categoriaPlanillaID: idCategoria,
                    __RequestVerificationToken: $('#frmBusquedaTrabajador input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Generar", "Planillas")',
                    data: parametros,
                    dataType: 'json',
                    beforeSend: function () {
                    },
                    success: function (response) {
                        if (response.Success) {
                            mostrarMensajeSistema(response.Message, MENSAJE.SUCCESS);

                            generarDatatableTrabajadoresAptos(anio, mes, idCategoria);
                        } else {
                            mostrarMensajeSistema(response.Message, MENSAJE.ERROR);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        mostrarMensajeSistema(thrownError, MENSAJE.ERROR);
                    }
                });
            });
        });

        function generarDatatableTrabajadoresAptos(anio, mes, idCategoria) {
            let parametros = {
                anio: anio,
                mes: mes,
                idCategoria: idCategoria
            };

            $('#dataTableTrabajadoresAptos').DataTable({
                ajax: {
                    'url': '@Url.Action("ObtenerListaTrabajadoresAptos", "Planillas")',
                    'data': parametros,
                    'type': 'get'
                },
                columns: [
                    { data: 'categoriaPlanillaDesc' },
                    { data: 'grupoTrabajoDesc' },
                    { data: 'trabajadorCod' },
                    { data: 'tipoDocumentoDesc' },
                    { data: 'apellidosNombre' },
                    { data: 'vinculoDesc' },
                    { data: 'dependenciaDesc' },
                    { data: 'estadoDesc' },
                    { data: 'trabajadorCategoriaPlanillaID' }
                ],
                columnDefs: [
                    {
                        targets: 3,
                        orderable: false,
                        render: function (data, type, row) {
                            return data + " - " + row.numDocumento;
                        }
                    },
                    {
                        targets: -1,
                        className: "text-center",
                        orderable: false,
                        render: function (data, type, row) {
                            let html = '';
                            if (!row.tienePlanilla) {
                                if (row.seleccionado) {
                                    html = `<input type="checkbox" name="chkTrabajador" value="${data}" checked="checked" onclick="permitirGeneracionPlanilla(this);" />`;
                                } else {
                                    let disabled = "";
                                    if (!row.estaHabilitado) {
                                        disabled = "disabled=\"disabled\"";
                                    }
                                    html = `<input type="checkbox" name="chkTrabajador" value="${data}" onclick="permitirGeneracionPlanilla(this);" ${disabled} />`;
                                }
                            } else {
                                html = '<span class="text-success">Planilla generada</span>';
                            }
                            return html;
                        }
                    }
                ],
                bStateSave: false,
                bDestroy: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todas"]],
                iDisplayLength: 10,
                language: {
                    search: "Buscar: ",
                    lengthMenu: "Mostrar _MENU_ filas",
                    info: "Mostrando del _START_ al _END_ de _TOTAL_ elementos.",
                    infoEmpty: "No se encontraron registros.",
                    zeroRecords: "No hay data disponible.",
                    emptyTable: "No hay data disponible.",
                    paginate: {
                        first: "Primero",
                        previous: "Previo",
                        next: "Siguiente",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": activar para ordenar la columna en orden ascendente",
                        sortDescending: ": activar para ordenar la columna en orden descendente"
                    },
                    loadingRecords: "Cargando...",
                    processing: "Procesando..."
                },
                searching: true,
                initComplete: function (settings, json) {
                    var api = this.api();
                    var numRows = api.rows().count();
                    
                    if (numRows > 0) {
                        $('#divBtnGenerar').css('display', 'block');
                    } else {
                        $('#divBtnGenerar').css('display', 'none');
                    }
                }
            });
        }

        function permitirGeneracionPlanilla(element) {
            let parametros = {
                id: element.value,
                isChecked: $(element).is(':checked'),
                __RequestVerificationToken: $('#frmBusquedaTrabajador input[name="__RequestVerificationToken"]').val()
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("PermitirGeneracionPlanilla", "Planillas")',
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                },
                success: function (response) {
                    if (!response.Success) {
                        mostrarMensajeSistema(response.Message, MENSAJE.ERROR);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    mostrarMensajeSistema(thrownError, MENSAJE.ERROR);
                }
            });
        }
    </script>
}
